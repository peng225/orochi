// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: query.sql

package query

import (
	"context"
)

const insertDatastore = `-- name: InsertDatastore :one
INSERT INTO datastore (
   base_url
) VALUES (
  $1
)
RETURNING id
`

func (q *Queries) InsertDatastore(ctx context.Context, baseUrl string) (int64, error) {
	row := q.db.QueryRowContext(ctx, insertDatastore, baseUrl)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const selectDatastore = `-- name: SelectDatastore :one
SELECT id, base_url FROM datastore
WHERE id = $1
`

func (q *Queries) SelectDatastore(ctx context.Context, id int64) (Datastore, error) {
	row := q.db.QueryRowContext(ctx, selectDatastore, id)
	var i Datastore
	err := row.Scan(&i.ID, &i.BaseUrl)
	return i, err
}
